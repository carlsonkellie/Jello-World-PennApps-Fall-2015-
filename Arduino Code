//Real Variables:

const int redLED = 5;
const int greenLED = 6;
const int servoPin = 9;
const int piezo = 10;
Servo servo;
boolean isLocked;


//Music Variables:


int c = 3830;
int d = 3400;
int e = 3038;
int f = 2864;
int g = 2550;
int a = 2272;
int b = 2028;
int C = 1912;
int R = 0;

int melody[] = {C, C, g, g, a, a, g, f, f, e, e, d, d, C};
int beats[]  = { 40, 32, 40, 32, 40, 32, 60, 40, 32, 40, 32, 40, 32, 80};
int MAX_COUNT = sizeof(melody) / 2; // Melody length, for looping.

long tempo = 10000;
int pause = 1000;int rest_count = 100; 

int tone_ = 0;
int beat = 0;
long duration  = 0;

void setup() {
  digitalWrite(redLED, LOW);
  digitalWrite(greenLED, HIGH);
  isLocked = false;
  servo.attach(servoPin);
}

void loop() {
  if (!isLocked) {
    digitalWrite(greenLED, HIGH);
  } else {
    digitalWrite(redLED, HIGH);
  }
}

void lock() {
  digitalWrite(greenLED, LOW);
  isLocked = true; 
  playTone();
  servo.write(90);
  
}

void unlock() {
  digitalWrite(redLED, LOW);
  isLocked = false;
  playTone();
  servo.write(0);
}


void playTone() {
    long elapsed_time = 0;
    if (tone_ > 0) { // if this isn't a Rest beat, while the tone has
        //  played less long than 'duration', pulse speaker HIGH and LOW
        while (elapsed_time < duration) {          
            digitalWrite(piezo,HIGH);
            delayMicroseconds(tone_ / 2);
            // DOWN
            digitalWrite(piezo, LOW);
            delayMicroseconds(tone_ / 2);
            // Keep track of how long we pulsed
            elapsed_time += (tone_);
        }
    }
    else { // Rest beat; loop times delay
        for (int j = 0; j < rest_count; j++) { // See NOTE on rest_count
            delayMicroseconds(duration);  
        }                             
    }                              
}